---
import Layout from "../layouts/Layout.astro";
import { resolveComponent } from "../utils/component-resolver";
import { getPageData } from "../utils/dev-data-fetcher";
import "../styles/global.css";
import Footer from "../components/Footer.astro";
import CTASection from "../components/CTASection.astro";
import FeaturesBento from "@/components/FeaturesBento.astro";

// Try to get page data, but fall back to static content
let page: any = null;
let resolvedComponents: any[] = [];

try {
    page = await getPageData("index");
    if (page && page.components) {
        resolvedComponents = await Promise.all(
            page.components.map(async (component: any) => {
                const Component = await resolveComponent(component.componentName);
                return {
                    Component,
                    props: component.formData,
                    instanceId: component.instanceId,
                    componentName: component.componentName,
                };
            }),
        );
    }
} catch (error) {
    console.log("Using static fallback content for landing page");
    page = { title: "Excalibur CMS - The Modern Content Management System" };
}
---

<Layout title={page?.title || "Excalibur CMS - The Modern Content Management System"}>
    {(
        <div class="relative" style="background: radial-gradient(ellipse 1200px 800px at 50% 0%, rgba(59,130,246,0.15) 0%, rgba(59,130,246,0.08) 40%, rgba(59,130,246,0.02) 70%, transparent 100%);">
            {resolvedComponents.map(
                ({ Component, props, instanceId, componentName }) => {
                    if (!Component) {
                        return (
                            <div
                                class="component-error"
                                data-instance-id={instanceId}
                                style="display: none;"
                            >
                                <p>Component '{componentName}' not found.</p>
                            </div>
                        );
                    }
                    return (
                        <Component data-instance-id={instanceId} {...props} />
                    );
                }
            )}
        </div>
    )}

    <!-- Static Landing Page Content -->
    {(
        <div class="relative">

<!--//TODO THIS SHOULDNT ALL LOAD ON CLIENT -->
      <FeaturesBento />
            <!-- CTA Section -->
            <CTASection />
        </div>
    )}

    <!-- Footer -->
    <Footer />

    <style>
        .component-error p {
            margin: 0;
            color: #c00;
        }

        .fallback-content {
            text-align: center;
            color: #666;
            font-style: italic;
        }
    </style>
</Layout>
